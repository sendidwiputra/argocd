apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Values.prometheus.name}}
  namespace: {{ .Values.metadata.namespace }}
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: {{ .Values.prometheus.version}}
    helm:
      releaseName: {{ .Values.prometheus.name}}
      values: |
        defaultRules:
          create: true
          rules:
            etcd: false
            kubeScheduler: false
        kubeScheduler:
          enabled: false
        kubeEtcd:
          enabled: false
        alertmanager:
          enabled: true
        grafana:
          enabled: true
          adminPassword: sendibcx
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                preference:
                  matchExpressions:
                  - key: preferred
                    operator: In
                    values:
                    - observability
          # persistence:
          #   enabled: true
          #   storageClassName: do-block-storage
          #   accessModes: ["ReadWriteOnce"]
          #   size: 1Gi
        prometheusOperator:
          enabled: true
        prometheus:
          enabled: true
          additionalServiceMonitors:
          #   - name: "emojivoto-monitor"
          #     selector:
          #       matchExpressions:
          #         - key: app
          #           operator: In
          #           values:
          #             - emoji-svc
          #             - voting-svc
          #     namespaceSelector:
          #       matchNames: 
          #         - emojivoto
          #     endpoints:
          #       - port: "prom"
            - name: "ingress-nginx-monitor"
              selector:
                matchLabels:
                  app.kubernetes.io/name: ingress-nginx
              namespaceSelector:
                matchNames:
                  - ingress-nginx
              endpoints:
                - port: "metrics"

          # # Uncomment the following section to enable Loki service monitoring
          #   - name: "loki-monitor"
          #     selector:
          #       matchLabels:
          #         app: loki
          #         release: loki
          #     namespaceSelector:
          #       matchNames:
          #         - loki-stack
          #     endpoints:
          #       - port: "http-metrics"

          # # Uncomment the following section to enable Promtail service monitoring
          #   - name: "promtail-monitor"
          #     selector:
          #       matchLabels:
          #         app: promtail
          #         release: loki
          #     namespaceSelector:
          #       matchNames:
          #         - loki-stack
          #     endpoints:
          #       - port: "http-metrics"

          ## Prometheus StorageSpec for persistent data
          ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/user-guides/storage.md
          ##
          prometheusSpec:
            affinity:
              nodeAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 1
                  preference:
                    matchExpressions:
                    - key: preferred
                      operator: In
                      values:
                      - observability
            # storageSpec:
            #   volumeClaimTemplate:
            #     spec:
            #       storageClassName: do-block-storage
            #       accessModes: ["ReadWriteOnce"]
            #       resources:
            #         requests:
            #           storage: 1Gi
  destination:
    server: {{ .Values.spec.destination.server }}
    namespace: {{ .Values.prometheus.namespace }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true # create destination namespace if not present
